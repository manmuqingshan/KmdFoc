#include "imu_task.h"

#include "cmsis_os.h"

#include "ahrs.h"
#include "bsp_spi.h"
#include "spi.h"
#include "bmi088driver.h"
#include "ist8310driver.h"
#include "bsp_bmi088.h"

#include "bsp_spi.h"
#include "bsp_offset.h"


extern SPI_HandleTypeDef hspi1;
extern void bsp_bmi088_drive_init(void);
extern void bsp_bmi088_read_updata(void);
extern void gyro_offset_init(void);
extern void bim088_gyro_offset_update(void);


osThreadId imuTaskHandle;
void imu_task_creat(void)
{
  osThreadDef(imuTask, imu_task, osPriorityRealtime, 0, 512);
  imuTaskHandle = osThreadCreate(osThread(imuTask), NULL);
}
//static TaskHandle_t imu_Task_handle;//此任务大概2ms
void imu_task(void const *pvParameters)
{
	TickType_t peroid = osKernelSysTick();
	/*开启任务延时时间(单位ms)*/
	osDelay(IMU_TASK_INIT_TIME1);
	/*初始化BMI088*/
   	while(bsp_bmi088_init())
    {
        osDelay(100);
    }
	/*初始化ist8310*/
    while(ist8310_init())
    {
        osDelay(100);
    }
	bsp_bmi088_drive_init();
	cali_param_init();
	//获取当前任务的任务句柄，
//  imu_Task_handle = xTaskGetHandle(pcTaskGetName(NULL));
	osDelay(IMU_TASK_INIT_TIME2);
	while(1)
	{
		bsp_bmi088_read_updata();
		calibrate_imu();
		osDelayUntil(&peroid,IMU_TASK_PERIOD);
	}
}


